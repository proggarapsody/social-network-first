{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Header/Header.module.css","assets/images/preloader.svg","components/Profile/MyPosts/Post/Post.module.css","components/Navbar/Navbar.module.css","serviceWorker.js","api/api.js","redux/authReducer.js","redux/dialogsReducer.js","redux/profileReducer.js","redux/usersReducer.js","redux/appReducer.js","redux/redux-store.js","components/Navbar/Navbar.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/hoc.js","components/Dialogs/DialogsContainer.jsx","components/Users/User/User.jsx","components/common/Paginator/Pagination.jsx","components/Users/Users.jsx","common/Preloader/Preloader.jsx","redux/selectors/usersSelectors.js","components/Users/UsersContainer.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/common/NewPostForm/NewPostContainer.jsx","components/common/NewPostForm/NewPostForm.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","components/News/Posts/Posts.jsx","components/News/Posts/PostsContainer.jsx","App.js","index.js","components/Dialogs/Dialogs.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Users/Users.module.css","components/common/NewPostForm/NewPostForm.module.css","components/Users/User/User.module.css"],"names":["module","exports","profileInfo","descriptionBlock","header","loginBlock","__webpack_require__","p","item","nav","activeLink","Boolean","window","location","hostname","match","instance","axios","withCredentials","headers","API-KEY","baseURL","UsersApi","currentPage","arguments","length","undefined","pageSize","get","concat","then","response","data","id","post","delete","ProfileApi","status","put","AuthApi","email","password","rememberMe","initialState","userId","login","isFetching","isAuth","setAuthUserData","type","setAuthData","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","_response$data$data","_login","wrap","_context","prev","next","sent","resultCode","stop","_x","apply","this","logout","_ref3","_callee3","_context3","_x3","authReducer","state","action","objectSpread","dialogs","name","messages","message","posts","likesCount","profile","setStatus","users","totalUsersCount","followingInProgress","setUsers","toggleIsFetching","toggleFollowingInProgress","isFollowing","isInitialized","appReducer","reducers","combineReducers","profilePage","newPost","newText","toConsumableArray","filter","dialogsPage","newMessage","usersPage","map","u","followed","totalCount","auth","form","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Navbar","react_default","createElement","className","styles","NavLink","to","activeClassName","active","DialogItem","props","path","dialogItem","Message","dialog","MessageReduxForm","reduxForm","onSubmit","handleSubmit","Field","component","placeholder","Dialogs","dialogsElements","d","Dialogs_DialogItem_DialogItem","messagesElements","m","Dialogs_Message_Message","Redirect","dialogsItems","value","sendMessage","mapStateToProps","withRedirect","Component","connect","DialogsContainer","components_Dialogs_Dialogs","React","newMessageText","sendMessageActionCreator","User","user","src","photos","small","alt","disabled","some","onClick","unfollow","follow","Pagination","onPageChanged","pagesCount","Math","ceil","react_paginate_default","previousLabel","nextLabel","pageCount","pageRangeDisplayed","onPageChange","_ref2","selected","containerClassName","nextLinkClassName","previousLinkClassName","disabledClassName","Users","pages","i","push","common_Paginator_Pagination","el","Users_User_User","Preloader","loader","getUsers","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","_ref4","_callee4","_context4","_x4","getUsersThunkCreator","items","changePageThunkCreator","page","_callee2","_context2","_x2","useEffect","console","log","common_Preloader_Preloader","preloader","components_Users_Users","ProfileStatusHooks","_useState","useState","_useState2","slicedToArray","editMode","setEditMode","_useState3","_useState4","changeEditMode","onDoubleClick","autoFocus","onBlur","e","updateProfileStatus","onChange","target","ProfileInfo","fullName","ProfileInfo_ProfileStatusHooks","NewPostContainer","children","container","NewPostForm","_useForm","useForm","mode","register","errors","NewPostContainer_NewPostContainer","assign","button","Post","MyPosts","newPostTextarea","buttonBlock","butt","postsElements","MyPosts_Post_Post","postsBlock","NewPostForm_NewPostForm","addPost","postText","MyPostsContainer","Profile","Profile_ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","ProfileContainer","params","authUserId","setProfileData","getProfileStatus","components_Profile_Profile","withRouter","Header","HeaderContainer","components_Header_Header","LoginForm","error","stopSubmit","_error","Login_LoginForm","Posts","PostsContainer","Fragment","News_Posts_Posts","App","initializeApp","Header_HeaderContainer","components_Navbar_Navbar","Route","render","Dialogs_DialogsContainer","Profile_ProfileContainer","Users_UsersContainer","components_Login_Login","Posts_PostsContainer","ReactDOM","BrowserRouter","react_redux_es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","activePage","pagesBox"],"mappings":"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","file":"static/js/main.05e414cb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__35Fo0\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1uxcL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__13bei\",\"loginBlock\":\"Header_loginBlock__1uJZq\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.305f3d60.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2a6Lb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__38uYG\",\"item\":\"Navbar_item__yuwH8\",\"activeLink\":\"Navbar_activeLink__1NRhI\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as axios from \"axios\";\r\n\r\nlet instance = axios.create({\r\n  withCredentials: true,\r\n  headers: {\r\n    \"API-KEY\": \"2ece4c51-310e-4798-aa66-8ed83e3297cd\",\r\n  },\r\n  baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n});\r\n\r\nexport const UsersApi = {\r\n  getUsers(currentPage = 1, pageSize = 10) {\r\n    return instance\r\n      .get(`users?page=${currentPage}&count=${pageSize}`)\r\n      .then((response) => {\r\n        return response.data;\r\n      });\r\n  },\r\n  follow(id) {\r\n    return instance.post(\r\n      `follow/${id}`,\r\n      {},\r\n      {\r\n        withCredentials: true,\r\n        headers: {\r\n          \"API-KEY\": \"2ece4c51-310e-4798-aa66-8ed83e3297cd\",\r\n        },\r\n      }\r\n    );\r\n  },\r\n  unFollow(id) {\r\n    return instance.delete(`follow/${id}`);\r\n  },\r\n};\r\n\r\nexport const ProfileApi = {\r\n  getProfileData(id) {\r\n    return instance.get(`profile/${id}`);\r\n  },\r\n  getProfileStatus(id) {\r\n    return instance.get(`profile/status/${id}`);\r\n  },\r\n  updateStatus(status) {\r\n    return instance.put(`profile/status`, {\r\n      status: status,\r\n    });\r\n  },\r\n};\r\n\r\nexport const PostsApi = {\r\n  deletePost(id){\r\n  \r\n  }\r\n}\r\n\r\nexport const AuthApi = {\r\n  getAuthData() {\r\n    return instance.get(\"auth/me\");\r\n  },\r\n  getProfileData(id) {\r\n    return instance.get(`profile/${id}`);\r\n  },\r\n  login(email, password, rememberMe) {\r\n    return instance.post(`auth/login`, {\r\n      email,\r\n      password,\r\n      rememberMe,\r\n    });\r\n  },\r\n  logout() {\r\n    return instance.delete(`auth/login`);\r\n  },\r\n};\r\n","import { stopSubmit } from \"redux-form\";\r\nimport { AuthApi } from \"../api/api\";\r\n\r\nconst SET_USER_DATA = \"SET_USER_DATA\";\r\n\r\nconst initialState = {\r\n  userId: null,\r\n  email: null,\r\n  login: null,\r\n  isFetching: false,\r\n  isAuth: false,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USER_DATA: {\r\n      return {\r\n        ...state,\r\n        ...action.data,\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => {\r\n  return {\r\n    type: SET_USER_DATA,\r\n    data: {\r\n      userId,\r\n      email,\r\n      login,\r\n      isAuth,\r\n      \r\n    },\r\n  };\r\n};\r\n\r\nexport const setAuthData = () => {\r\n  return async (dispatch) => {\r\n    let response = await AuthApi.getAuthData();\r\n\r\n    if (response.data.resultCode === 0) {\r\n      let { id, email, login } = response.data.data;\r\n      dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n  };\r\n};\r\n\r\nexport const login = (email, password, rememberMe = false) => {\r\n  return async (dispatch) => {\r\n    let response = await AuthApi.login(email, password, rememberMe);\r\n\r\n    if (response.data.resultCode === 0) {\r\n      dispatch(setAuthData());\r\n    } else {\r\n      let message =\r\n        response.data.messages.length > 0\r\n          ? response.data.messages[0]\r\n          : \"???some error???\";\r\n\r\n      dispatch(stopSubmit(\"login\", { _error: message }));\r\n    }\r\n  };\r\n};\r\n\r\nexport const logout = () => {\r\n  return async (dispatch) => {\r\n    let response = await AuthApi.logout();\r\n\r\n    if (response.data.resultCode === 0) {\r\n      dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n  };\r\n};\r\n\r\nexport default authReducer;\r\n","const SEND_MESSAGE = \"SEND-MESSAGE\";\r\n\r\nconst initialState = {\r\n  dialogs: [\r\n    { id: 1, name: \"Dimych\" },\r\n    { id: 2, name: \"Andrew\" },\r\n    { id: 3, name: \"Sveta\" },\r\n    { id: 4, name: \"Sasha\" },\r\n    { id: 5, name: \"Viktor\" },\r\n    { id: 6, name: \"Valera\" },\r\n  ],\r\n  messages: [\r\n    { id: 1, message: \"Hi\" },\r\n    { id: 2, message: \"How is your it-kamasutra?\" },\r\n    { id: 3, message: \"Yo\" },\r\n    { id: 4, message: \"Yo\" },\r\n    { id: 5, message: \"Yo\" },\r\n  ],\r\n};\r\n\r\nexport const dialogsReducer = (state = initialState, action) => {\r\n  if (action.type === SEND_MESSAGE) {\r\n    let newMessage = {\r\n      id: 6,\r\n      message: action.newText,\r\n    };\r\n    return { ...state, messages: [...state.messages, newMessage] };\r\n  } \r\n\r\n  return state;\r\n};\r\n\r\nexport const sendMessageActionCreator = (newText) => {\r\n  return {\r\n    type: SEND_MESSAGE,\r\n    newText,\r\n  };\r\n};\r\n\r\n\r\n","import { AuthApi, ProfileApi } from \"../api/api\";\r\n\r\nconst ADD_POST = \"ADD-POST\";\r\nconst SET_PROFILE = \"SET_PROFILE\";\r\nconst SET_STATUS = \"SET_STATUS\";\r\nconst DELETE_POST = \"DELETE_POST\";\r\n\r\nconst initialState = {\r\n  posts: [\r\n    { id: 1, message: \"Hi, how are you?\", likesCount: 12 },\r\n    { id: 2, message: \"It's my first post\", likesCount: 11 },\r\n    { id: 3, message: \"Blabla\", likesCount: 11 },\r\n    { id: 4, message: \"Dada\", likesCount: 11 },\r\n  ],\r\n  profile: null,\r\n  status: \"\",\r\n};\r\n\r\nexport const profileReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST: {\r\n      let newPost = {\r\n        id: 5,\r\n        message: action.newText,\r\n        likesCount: 0,\r\n      };\r\n\r\n      return { ...state, posts: [...state.posts, newPost] };\r\n    }\r\n    case SET_PROFILE: {\r\n      return { ...state, profile: action.profile };\r\n    }\r\n    case SET_STATUS: {\r\n      return { ...state, status: action.status };\r\n    }\r\n    case DELETE_POST: {\r\n      return { ...state, posts: state.posts.filter((p) => p.id != action.id) };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\n//Action Creators:\r\n\r\nexport const addPost = (newText) => {\r\n  return { type: ADD_POST, newText };\r\n};\r\n\r\nexport const setProfile = (profile) => {\r\n  return {\r\n    type: SET_PROFILE,\r\n    profile,\r\n  };\r\n};\r\n\r\nexport const setStatus = (status) => {\r\n  return {\r\n    type: SET_STATUS,\r\n    status,\r\n  };\r\n};\r\n\r\nexport const deletePost = (id) => {\r\n  return {\r\n    type: DELETE_POST,\r\n    id,\r\n  };\r\n};\r\n\r\n//Thunk Creators:\r\n\r\nexport const setProfileData = (id) => {\r\n  return async (dispatch) => {\r\n    let response = await AuthApi.getProfileData(id);\r\n\r\n    dispatch(setProfile(response.data));\r\n  };\r\n};\r\n\r\nexport const getProfileStatus = (id) => {\r\n  return async (dispatch) => {\r\n    let response = await ProfileApi.getProfileStatus(id);\r\n\r\n    if (response.data != null) {\r\n      dispatch(setStatus(response.data));\r\n    } else {\r\n      dispatch(setStatus(\"\"));\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateProfileStatus = (status) => {\r\n  return async (dispatch) => {\r\n    let response = await ProfileApi.updateStatus(status);\r\n\r\n    dispatch(setStatus(status));\r\n  };\r\n};\r\n","import { UsersApi } from \"../api/api\";\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET-USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_FOLLOWING_IN_PROGRESS = \"TOGGLE_FOLLOWING_IN_PROGRESS\";\r\n\r\nconst initialState = {\r\n  users: [],\r\n  pageSize: 10,\r\n  totalUsersCount: 0,\r\n  currentPage: 1,\r\n  isFetching: false,\r\n  followingInProgress: [],\r\n};\r\n\r\nexport const usersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FOLLOW: {\r\n      return {\r\n        ...state,\r\n        users: state.users.map((u) => {\r\n          if (u.id === action.userId) {\r\n            return { ...u, followed: true };\r\n          }\r\n          return u;\r\n        }),\r\n      };\r\n    }\r\n    case UNFOLLOW: {\r\n      return {\r\n        ...state,\r\n        users: state.users.map((u) => {\r\n          if (u.id === action.userId) {\r\n            return { ...u, followed: false };\r\n          }\r\n          return u;\r\n        }),\r\n      };\r\n    }\r\n    case SET_USERS: {\r\n      return {\r\n        ...state,\r\n        users: [...action.users],\r\n      };\r\n    }\r\n    case SET_CURRENT_PAGE: {\r\n      return { ...state, currentPage: action.currentPage };\r\n    }\r\n    case SET_TOTAL_USERS_COUNT: {\r\n      return { ...state, totalUsersCount: action.totalCount };\r\n    }\r\n    case TOGGLE_IS_FETCHING: {\r\n      return { ...state, isFetching: action.isFetching };\r\n    }\r\n    case TOGGLE_FOLLOWING_IN_PROGRESS: {\r\n      return {\r\n        ...state,\r\n        followingInProgress: action.followingInProgress // если сейчас идет подписка то добавляем в массив id пользователя с процессом, если нет удаляем этого пользоваетеля из массива\r\n          ? [...state.followingInProgress, action.userId]\r\n          : state.followingInProgress.filter((id) => id != action.userId),\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\n// Action Creators:\r\n\r\nexport const followSuccess = (userId) => {\r\n  return {\r\n    type: \"FOLLOW\",\r\n    userId: userId,\r\n  };\r\n};\r\n\r\nexport const unfollowSuccess = (userId) => {\r\n  return {\r\n    type: \"UNFOLLOW\",\r\n    userId: userId,\r\n  };\r\n};\r\n\r\nexport const setUsers = (users) => {\r\n  return {\r\n    type: SET_USERS,\r\n    users: users,\r\n  };\r\n};\r\n\r\nexport const setCurrentPage = (newCurrentPage) => {\r\n  return {\r\n    type: SET_CURRENT_PAGE,\r\n    currentPage: newCurrentPage,\r\n  };\r\n};\r\n\r\nexport const setTotalUsersCount = (totalCount) => {\r\n  return {\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    totalCount: totalCount,\r\n  };\r\n};\r\n\r\nexport const toggleIsFetching = (isFetching) => {\r\n  return {\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching: isFetching,\r\n  };\r\n};\r\n\r\nexport const toggleFollowingInProgress = (isFollowing, userId) => {\r\n  return {\r\n    type: TOGGLE_FOLLOWING_IN_PROGRESS,\r\n    userId: userId,\r\n    followingInProgress: isFollowing,\r\n  };\r\n};\r\n\r\n// Thunk Creators:\r\n\r\nexport const getUsersThunkCreator = (currentPage, pageSize) => {\r\n  return async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    let response = await UsersApi.getUsers(currentPage, pageSize);\r\n\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(response.items));\r\n    dispatch(setTotalUsersCount(response.totalCount));\r\n  };\r\n};\r\n\r\nexport const changePageThunkCreator = (page, pageSize) => {\r\n  return async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(setCurrentPage(page));\r\n\r\n    let response = await UsersApi.getUsers(page, pageSize);\r\n\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(response.items));\r\n  };\r\n};\r\n\r\nexport const unfollow = (id) => {\r\n  return async (dispatch) => {\r\n    dispatch(toggleFollowingInProgress(true, id));\r\n    let response = await UsersApi.unFollow(id);\r\n\r\n    if (response.data.resultCode == 0) {\r\n      dispatch(unfollowSuccess(id));\r\n    }\r\n    dispatch(toggleFollowingInProgress(false, id));\r\n  };\r\n};\r\n\r\nexport const follow = (id) => {\r\n  return async (dispatch) => {\r\n    dispatch(toggleFollowingInProgress(true, id));\r\n    let response = await UsersApi.follow(id);\r\n\r\n    if (response.data.resultCode == 0) {\r\n      dispatch(followSuccess(id));\r\n    }\r\n    dispatch(toggleFollowingInProgress(false, id));\r\n  };\r\n};\r\n","import { setAuthData } from \"./authReducer\";\r\n\r\nconst IS_INITIALIZED = \"IS_INITIALIZED\";\r\n\r\nconst initialState = {\r\n  isInitialized: false,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case IS_INITIALIZED: {\r\n      return { ...state, isInitialized: true };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nconst initializeSuccess = () => {\r\n  return {\r\n    type: IS_INITIALIZED,\r\n  };\r\n};\r\n\r\nexport const initializeApp = () => {\r\n  return (dispatch) => {\r\n    let promise = dispatch(setAuthData());\r\n    promise.then(() => {\r\n      dispatch(initializeSuccess());\r\n    });\r\n  };\r\n};\r\n\r\nexport default appReducer;\r\n","import { applyMiddleware, combineReducers, createStore, compose } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport { dialogsReducer } from \"./dialogsReducer\";\r\nimport { profileReducer } from \"./profileReducer\";\r\nimport { usersReducer } from \"./usersReducer\";\r\nimport appReducer from \"./appReducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nlet reducers = combineReducers({\r\n  profilePage: profileReducer,\r\n  dialogsPage: dialogsReducer,\r\n  usersPage: usersReducer,\r\n  auth: authReducer,\r\n  form: formReducer,\r\n  app: appReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)))\r\n\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport styles from \"./Navbar.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className={styles.nav}>\r\n      <div className={styles.item}>\r\n        <NavLink to=\"/profile\" activeClassName={styles.activeLink}>\r\n          Profile\r\n        </NavLink>\r\n      </div>\r\n      <div className={`${styles.item} ${styles.active}`}>\r\n        <NavLink to=\"/dialogs\" activeClassName={styles.activeLink}>\r\n          Messages\r\n        </NavLink>\r\n      </div>\r\n      <div className={styles.item}>\r\n        <NavLink to=\"/news\" activeClassName={styles.activeLink}>\r\n          News\r\n        </NavLink>\r\n      </div>\r\n      <div className={styles.item}>\r\n        <NavLink to=\"/users\" activeClassName={styles.activeLink}>\r\n          Users\r\n        </NavLink>\r\n      </div>\r\n      <div className={styles.item}>\r\n        <NavLink to=\"/music\" activeClassName={styles.activeLink}>\r\n          Music\r\n        </NavLink>\r\n      </div>\r\n      <div className={styles.item}>\r\n        <NavLink to=\"/settings\" activeClassName={styles.activeLink}>\r\n          Settings\r\n        </NavLink>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport styles from \"./../Dialogs.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n  let path = \"/dialogs/\" + props.id;\r\n\r\n  return (\r\n    <div className={styles.dialogItem}>\r\n      <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n","import React from \"react\";\r\nimport styles from \"./../Dialogs.module.css\";\r\n\r\nconst Message = (props) => {\r\n  return <div className={styles.dialog}>{props.message}</div>;\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport styles from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\n\r\nconst MessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field\r\n        name=\"message\"\r\n        component=\"textarea\"\r\n        placeholder=\"Enter your message\"\r\n      />\r\n      <button>Send message</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst MessageReduxForm = reduxForm({\r\n  form: \"message\",\r\n})(MessageForm);\r\n\r\nconst Dialogs = (props) => {\r\n  let dialogsElements = props.dialogs.map((d) => (\r\n    <DialogItem name={d.name} id={d.id} />\r\n  ));\r\n  let messagesElements = props.messages.map((m) => (\r\n    <Message message={m.message} />\r\n  ));\r\n\r\n  const onSendMessageClick = (value) => {\r\n    props.sendMessage(value.message);\r\n  };\r\n\r\n  if (props.isAuth == false) return <Redirect to={\"/login\"} />;\r\n\r\n  return (\r\n    <div className={styles.dialogs}>\r\n      <div className={styles.dialogsItems}>{dialogsElements}</div>\r\n      <div className={styles.messages}>\r\n        <div>{messagesElements}</div>\r\n        <MessageReduxForm onSubmit={onSendMessageClick} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialogs;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth,\r\n  };\r\n};\r\n\r\nexport const withRedirect = (Component) => {\r\n  const ComponentWrapper = (props) => {\r\n    if (props.isAuth == false) return <Redirect to={\"/login\"} />;\r\n    return <Component {...props} />;\r\n  };\r\n  let ComponentWrapperConnect = connect(mapStateToProps)(ComponentWrapper)\r\n  return ComponentWrapperConnect;\r\n};\r\n","import React from \"react\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {\r\n  sendMessageActionCreator,\r\n  \r\n} from \"../../redux/dialogsReducer\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { withRedirect } from \"./../../hoc/hoc\";\r\nimport { compose } from \"redux\";\r\n// const DialogsContainer = (props) =>\r\n//   return (\r\n//     <StoreContext.Consumer>\r\n//       {(store) => {\r\n//         let state = store.getState();\r\n\r\n//         const onNewMessageTextUpdate = (newText) => {};\r\n\r\n//         const onSendMessageClick = () => {\r\n//           store.dispatch(sendMessageActionCreator());\r\n//         };\r\n\r\n//         return (\r\n//           <Dialogs\r\n//             updateNewMessageText={onNewMessageTextUpdate}\r\n//             sendMessage={onSendMessageClick}\r\n//             newMessageText={state.dialogsPage.newMessageText}\r\n//             dialogs={state.dialogsPage.dialogs}\r\n//             messages={state.dialogsPage.messages}\r\n//           />\r\n//         );\r\n//       }}\r\n//     </StoreContext.Consumer>\r\n//   );\r\n// };\r\n\r\nclass DialogsContainer extends React.Component {\r\n  render() {\r\n    return <Dialogs {...this.props} />;\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogs: state.dialogsPage.dialogs,\r\n    messages: state.dialogsPage.messages,\r\n    newMessageText: state.dialogsPage.newMessageText,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    \r\n    sendMessage: (newText) => {\r\n      dispatch(sendMessageActionCreator(newText));\r\n    },\r\n  };\r\n};\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withRedirect\r\n)(DialogsContainer);\r\n\r\n// export default connect(\r\n//   mapStateToProps,\r\n//   mapDispatchToProps\r\n// )(withRedirect(DialogsContainer));\r\n","import * as axios from \"axios\";\r\nimport React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { UsersApi } from \"../../../api/api\";\r\n\r\nimport styles from \"./User.module.css\";\r\n\r\nlet User = (props) => {\r\n  return (\r\n    <div className={styles.user}>\r\n      <NavLink to={\"/profile/\" + props.data.id}>\r\n        <div>\r\n          <img\r\n            src={\r\n              props.data.photos.small != null\r\n                ? props.data.photos.small\r\n                : \"./../../../logo192.png\"\r\n            }\r\n            alt=\"error\"\r\n          />\r\n        </div>\r\n      </NavLink>\r\n      <div>\r\n        {props.data.followed ? (\r\n          <button\r\n            disabled={props.followingInProgress.some(\r\n              (id) => id === props.data.id\r\n            )}\r\n            onClick={() => {\r\n              // props.toggleFollowingInProgress(true, props.data.id);\r\n              // UsersApi.unFollow(props.data.id).then((response) => {\r\n              //   if (response.data.resultCode == 0) {\r\n              //     props.unfollow(props.data.id);\r\n              //   }\r\n              //   props.toggleFollowingInProgress(false, props.data.id);\r\n              // });\r\n              props.unfollow(props.data.id);\r\n            }}\r\n          >\r\n            Unfollow\r\n          </button>\r\n        ) : (\r\n          <button\r\n            disabled={props.followingInProgress.some(\r\n              (id) => id === props.data.id\r\n            )}\r\n            onClick={() => {\r\n              props.follow(props.data.id);\r\n            }}\r\n          >\r\n            Follow\r\n          </button>\r\n        )}\r\n      </div>\r\n      <div className={styles.name}>\r\n        <div>{props.data.name} </div>\r\n      </div>\r\n      <div className={styles.status}> status {props.data.status}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport './Pagination.css'\r\nconst Pagination = ({\r\n  totalUsersCount,\r\n  pageSize,\r\n  onPageChanged,\r\n  currentPage,\r\n}) => {\r\n  let pagesCount = Math.ceil(totalUsersCount / pageSize);\r\n\r\n  let pagesVisited = currentPage * itemsPerPage;\r\n  let itemsPerPage = pageSize;\r\n\r\n  // let [page, setPage] = useState(1);\r\n\r\n  // useEffect(() => {\r\n  //   setPage(currentPage);\r\n  // }, currentPage);\r\n\r\n  const onPageChange = ({ selected }) => {\r\n    debugger;\r\n    onPageChanged(selected + 1);\r\n  };\r\n  return (\r\n    <div >\r\n      <ReactPaginate\r\n        previousLabel={\"Previous\"}\r\n        nextLabel={\"Next\"}\r\n        pageCount={pagesCount}\r\n        pageRangeDisplayed={7}\r\n        onPageChange={onPageChange}\r\n        containerClassName={\"paginationBttns\"}\r\n        nextLinkClassName={\"nextBttn\"}\r\n        previousLinkClassName={\"previousBttn\"}\r\n        disabledClassName={\"paginationDisabled\"}\r\n        activeClassName={\"paginationActive\"}\r\n      />\r\n\r\n      {/* <button\r\n        onClick={() => {\r\n          onPageChanged(currentPage - 1);\r\n        }}\r\n        disabled={currentPage <= 1 ? true : false}\r\n      >\r\n        Prev\r\n      </button>\r\n      {pages\r\n        .filter((p) => p >= leftPortionField && p <= rightPortionField)\r\n        .map((el) => (\r\n          <span\r\n            className={currentPage === el && styles.activePage}\r\n            onClick={() => {\r\n              onPageChanged(el);\r\n            }}\r\n          >\r\n            {el}\r\n          </span>\r\n        ))}\r\n      <button\r\n        onClick={() => {\r\n          onPageChanged(currentPage + 1);\r\n        }}\r\n      >\r\n        Next\r\n      </button> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\nimport User from \"./User/User\";\r\nimport styles from \"./Users.module.css\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport Paginator from \"../common/Paginator/Pagination\";\r\n\r\nconst Users = (props) => {\r\n  let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n\r\n  let pages = [];\r\n\r\n  for (let i = 1; i <= pagesCount; i++) {\r\n    pages.push(i);\r\n  }\r\n\r\n  return (\r\n    <div className={styles.users}>\r\n      {/* <div className={styles.pagesBox}>\r\n        {pages.map((el) => (\r\n          <span\r\n            className={props.currentPage === el && styles.activePage}\r\n            onClick={() => {\r\n              props.onPageChanged(el);\r\n            }}\r\n          >\r\n            {el}\r\n          </span>\r\n        ))}\r\n      </div> */}\r\n      <Paginator\r\n        onPageChanged={props.onPageChanged}\r\n        currentPage={props.currentPage}\r\n        totalUsersCount={props.totalUsersCount}\r\n        pageSize={props.pageSize}\r\n      />\r\n\r\n      {/* <button onClick={this.getUsers}>Get users</button> */}\r\n      {props.users.map((el) => (\r\n        <div>\r\n          <User\r\n            data={el}\r\n            follow={props.follow}\r\n            unfollow={props.unfollow}\r\n            followingInProgress={props.followingInProgress}\r\n          />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import React from \"react\";\r\nimport loader from \"../../assets/images/preloader.svg\";\r\nimport './Preloader.css'\r\nconst Preloader = (props) => {\r\n  return <img src={loader} className={'loader'}></img>;\r\n};\r\n\r\nexport default Preloader;\r\n","export const getUsers = (state) => {\r\n  return state.usersPage.users\r\n}\r\nexport const getPageSize = (state) => {\r\n  return state.usersPage.pageSize\r\n}\r\nexport const getTotalUsersCount = (state) => {\r\n  return state.usersPage.totalUsersCount\r\n}\r\nexport const getCurrentPage = (state) => {\r\n  return state.usersPage.currentPage\r\n}\r\nexport const getIsFetching = (state) => {\r\n  return state.usersPage.isFetching\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n  return state.usersPage.followingInProgress\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  follow,\r\n  unfollow,\r\n  getUsersThunkCreator,\r\n  changePageThunkCreator,\r\n} from \"../../redux/usersReducer\";\r\nimport Users from \"./Users\";\r\nimport styles from \"./Users.module.css\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport { compose } from \"redux\";\r\nimport { withRedirect } from \"../../hoc/hoc\";\r\nimport {\r\n  getCurrentPage,\r\n  getFollowingInProgress,\r\n  getIsFetching,\r\n  getPageSize,\r\n  getTotalUsersCount,\r\n  getUsers,\r\n} from \"../../redux/selectors/usersSelectors\";\r\n\r\nconst UsersContainer = (props) => {\r\n  // componentDidMount() {\r\n  //   this.props.getUsersThunkCreator(\r\n  //     this.props.currentPage,\r\n  //     this.props.pageSize\r\n  //   );\r\n  // }\r\n\r\n  // let [currentPage, setCurrentPage] = useState(props.currentPage);\r\n  // let [pageSize, setPageSize] = useState(props.pageSize);\r\n\r\n  useEffect(() => {\r\n    console.log(\"Render\");\r\n    props.getUsersThunkCreator(props.currentPage, props.pageSize);\r\n  }, props.totalUsersCount);\r\n\r\n  const onPageChanged = (page) => {\r\n    props.changePageThunkCreator(page, props.pageSize);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.users}>\r\n      {props.isFetching ? <Preloader className={styles.preloader} /> : null}\r\n      <Users\r\n        totalUsersCount={props.totalUsersCount}\r\n        pageSize={props.pageSize}\r\n        currentPage={props.currentPage}\r\n        onPageChanged={onPageChanged}\r\n        users={props.users}\r\n        follow={props.follow}\r\n        unfollow={props.unfollow}\r\n        followingInProgress={props.followingInProgress}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    users: getUsers(state),\r\n    pageSize: getPageSize(state),\r\n    totalUsersCount: getTotalUsersCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    isFetching: getIsFetching(state),\r\n    followingInProgress: getFollowingInProgress(state),\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    follow,\r\n    unfollow,\r\n\r\n    getUsersThunkCreator,\r\n    changePageThunkCreator,\r\n  }),\r\n  withRedirect\r\n)(UsersContainer);\r\n\r\n// export default connect(mapStateToProps, {\r\n//   follow,\r\n//   unfollow,\r\n\r\n//   getUsersThunkCreator,\r\n//   changePageThunkCreator,\r\n// })(UsersContainer);\r\n\r\n//OLD mapDispatchToProps\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     follow: (userID) => {\r\n//       dispatch(followActionCreator(userID));\r\n//     },\r\n//     unfollow: (userID) => {\r\n//       dispatch(unfollowActionCreator(userID));\r\n//     },\r\n//     setUsers: (users) => {\r\n//       dispatch(setUsersActionCreator(users));\r\n//     },\r\n\r\n//     setPage: (newCurrentPage) => {\r\n//       dispatch(setCurrentPageActionCreator(newCurrentPage));\r\n//     },\r\n//     setTotalUsersCount: (totalCount) => {\r\n//       dispatch(setTotalUsersCountActionCreator(totalCount));\r\n//     },\r\n//     toggleIsFetching: (isFetching) => {\r\n//       dispatch(toggleIsFetchingActionCreator(isFetching));\r\n//     },\r\n//   };\r\n// };\r\n","import React from \"react\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n  state = {\r\n    editMode: false,\r\n    status: this.props.status,\r\n  };\r\n\r\n  changeEditMode = () => {\r\n    this.setState({\r\n      // Async operation!!!\r\n      editMode: !this.state.editMode,\r\n    });\r\n  };\r\n\r\n  // GLOBAL STATE UPDATE WITH REQUEST\r\n  onStatusUpdate = () => {\r\n    this.props.updateProfileStatus(this.state.status);\r\n    this.changeEditMode();\r\n  };\r\n\r\n  // LOCAL STATE CHANGING while input change\r\n  onStatusTextChange = (e) => {\r\n    this.setState({\r\n      status: e.target.value,\r\n    });\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.status != this.props.status) {\r\n      this.setState({\r\n        status: this.props.status,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {!this.state.editMode && (\r\n          <div>\r\n            <span onDoubleClick={this.changeEditMode.bind(this)}>\r\n              {this.props.status || \"no status\"}\r\n            </span>\r\n          </div>\r\n        )}\r\n        {this.state.editMode && (\r\n          <div>\r\n            <input\r\n              autoFocus\r\n              // onFocus={(e) => {\r\n              //   e.target.select();\r\n              // }}\r\n              onBlur={(e) => {\r\n                this.onStatusUpdate();\r\n              }}\r\n              type=\"text\"\r\n              onChange={this.onStatusTextChange}\r\n              value={this.state.status}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProfileStatus;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nconst ProfileStatusHooks = (props) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status)\r\n  }, [props.status])\r\n\r\n  const changeEditMode = () => {\r\n    setEditMode(!editMode);\r\n  };\r\n\r\n  // GLOBAL STATE UPDATE WITH REQUEST\r\n  const onStatusUpdate = () => {\r\n    props.updateProfileStatus(status);\r\n    changeEditMode();\r\n  };\r\n\r\n  // LOCAL STATE CHANGING while input change\r\n  const onStatusTextChange = (e) => {\r\n    setStatus(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n          <span onDoubleClick={changeEditMode}>\r\n            {props.status || \"no status\"}\r\n          </span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            autoFocus\r\n            // onFocus={(e) => {\r\n            //   e.target.select();\r\n            // }}\r\n            onBlur={(e) => {\r\n              onStatusUpdate();\r\n            }}\r\n            type=\"text\"\r\n            onChange={onStatusTextChange}\r\n            value={status}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusHooks;\r\n","import React from \"react\";\r\nimport styles from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusHooks from \"./ProfileStatusHooks\";\r\nconst ProfileInfo = (props) => {\r\n  if (!props.profile) {\r\n    return <Preloader />;\r\n  } else {\r\n    return (\r\n      <div className={styles.profileInfo}>\r\n        <div className={styles.descriptionBlock}>\r\n          <img src={props.profile.photos.small} alt=\"\" />\r\n          <div>{props.profile.fullName}</div>\r\n          <div>\r\n            <ProfileStatusHooks\r\n              status={props.status}\r\n              updateProfileStatus={props.updateProfileStatus}\r\n              setStatus={props.setStatus}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react'\r\nimport styles from './NewPostForm.module.css'\r\nexport const NewPostContainer = ({children}) => {\r\n  return (\r\n    <div className={styles.container}>\r\n      {children} \r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { NewPostContainer } from \"./NewPostContainer\";\r\nimport styles from './NewPostForm.module.css'\r\n\r\nexport const NewPostForm = ({ onSubmit }) => {\r\n  const { register, handleSubmit, errors } = useForm({\r\n    mode: \"onBlur\",\r\n  });\r\n\r\n  \r\n\r\n  return (\r\n    <NewPostContainer>\r\n      <form onSubmit={handleSubmit(onSubmit)} className={styles.form}>\r\n        <input type=\"text\" {...register(\"postText\")} id=\"post\" name=\"postText\" />\r\n        \r\n        <button className={styles.button} type=\"submit\" name=\"button\">\r\n          Add post\r\n        </button>\r\n      </form>\r\n    </NewPostContainer>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport styles from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={styles.item}>\r\n      <img src=\"./../../../../logo192.png\" />\r\n      {props.message}\r\n      <div>\r\n        <span>like</span> {props.likesCount}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { NewPostForm } from \"../../common/NewPostForm/NewPostForm\";\r\nimport styles from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\n\r\nconst AddPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          name={\"newPostText\"}\r\n          className={styles.newPostTextarea}\r\n          placeholder=\"New Post\"\r\n          component={\"textarea\"}\r\n        />\r\n      </div>\r\n      <div className={styles.buttonBlock}>\r\n        <button className={styles.butt}>Add post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddPostReduxForm = reduxForm({\r\n  form: \"addPostForm\",\r\n})(AddPostForm);\r\n\r\nconst MyPosts = (props) => {\r\n  let postsElements = props.posts.map((el) => (\r\n    <Post message={el.message} likesCount={el.likesCount} />\r\n  ));\r\n\r\n  let onAddPost = (value) => {\r\n    debugger\r\n    props.addPost(value.postText);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={styles.postsBlock}>\r\n      <NewPostForm onSubmit={onAddPost}/>\r\n\r\n      <div className={styles.posts}>{postsElements}</div>\r\n      {/* <AddPostReduxForm onSubmit={onAddPost}/> */}\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyPosts;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addPost } from \"../../../redux/profileReducer.js\";\r\n\r\nimport MyPosts from \"./MyPosts\";\r\n\r\n// const MyPostsContainer = (props) => {\r\n//   return (\r\n//     <StoreContext.Consumer>\r\n//       {(store) => {\r\n//         let state = store.getState();\r\n\r\n//         let addPost = () => {\r\n//           let action = addPostActionCreator();\r\n//           store.dispatch(action);\r\n//         };\r\n\r\n//         let onPostChange = (text) => {\r\n\r\n//         };\r\n\r\n//         return (\r\n//           <MyPosts\r\n//             updateNewPostText={onPostChange}\r\n//             addPost={addPost}\r\n//             posts={state.profilePage.posts}\r\n//             newPostText={state.profilePage.newPostText}\r\n//           />\r\n//         );\r\n//       }}\r\n//     </StoreContext.Consumer>\r\n//   );\r\n// };\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n  };\r\n};\r\n\r\n// let mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     updateNewPostText: (text) => {\r\n//       let action = updateNewPostTextActionCreator(text);\r\n//       dispatch(action);\r\n//     },\r\n//     addPost: () => {\r\n//       let action = addPostActionCreator();\r\n//       dispatch(action);\r\n//     },\r\n//   };\r\n// };\r\n\r\nlet MyPostsContainer = connect(mapStateToProps, {\r\n  addPost,\r\n})(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\r\nimport styles from \"./Profile.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <ProfileInfo\r\n          profile={props.profile}\r\n          status={props.status}\r\n          setStatus={props.setStatus}\r\n          updateProfileStatus={props.updateProfileStatus}\r\n        />\r\n      </div>\r\n\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport styles from \"./Profile.module.css\";\r\nimport {\r\n  setProfileData,\r\n  getProfileStatus,\r\n  updateProfileStatus,\r\n  setStatus,\r\n} from \"../../redux/profileReducer\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Redirect, withRouter } from \"react-router-dom\";\r\n\r\nimport { withRedirect } from \"../../hoc/hoc\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authUserId;\r\n    }\r\n    this.props.setProfileData(userId);\r\n    this.props.getProfileStatus(userId);\r\n  }\r\n\r\n  render() {\r\n    if (this.props.isAuth == false) return <Redirect to={\"/login\"} />;\r\n    return (\r\n      <div>\r\n        <Profile {...this.props} profile={this.props.profile} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authUserId: state.auth.userId\r\n  };\r\n};\r\n\r\n// const ProfileRedirect = (props) => {\r\n//   if (props.isAuth == false) return <Redirect to={\"/login\"} />;\r\n//   return (\r\n//     <div>\r\n//       <ProfileContainer {...props} />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    setProfileData,\r\n    getProfileStatus,\r\n    updateProfileStatus,\r\n    setStatus,\r\n  }),\r\n  withRouter,\r\n  withRedirect\r\n)(ProfileContainer);\r\n\r\n// let urlContainer = withRouter(withRedirect(ProfileContainer));\r\n// export default connect(mapStateToProps, { setProfileData })(urlContainer);\r\n","import React from \"react\";\r\nimport styles from \"./Header.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nconst Header = (props) => {\r\n  return (\r\n    <header className={styles.header}>\r\n      <div className={styles.loginBlock}>\r\n        {props.isAuth ? (\r\n          <div>\r\n            <div>{props.login}</div>\r\n            <div>\r\n              <button onClick={props.logout}>Log Out</button>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <NavLink to=\"/login\">Login</NavLink>\r\n        )}\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../redux/authReducer\";\r\nimport Header from \"./Header\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n  \r\n\r\n  render() {\r\n    return <Header {...this.props} />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {logout })(\r\n  HeaderContainer\r\n);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { required } from \"../../utils/validators/validator\";\r\nimport { login, logout } from \"../../redux/authReducer\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst LoginForm = (props) => {\r\n  const { register, handleSubmit, errors } = useForm({\r\n    mode: \"onBlur\",\r\n  });\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(props.onSubmit)}>\r\n      <div>\r\n        {/* <Field\r\n          name={\"email\"}\r\n          type={\"text\"}\r\n          placeholder={\"Email\"}\r\n          component={\"input\"}\r\n          validate={[required]}\r\n        /> */}\r\n        <input\r\n          {...register(\"email\")}\r\n          type=\"email\"\r\n          id=\"email\"\r\n          name=\"email\"\r\n          placeholder={\"Email\"}\r\n        ></input>\r\n      </div>\r\n\r\n      <div>\r\n        {/* <Field\r\n          name={\"password\"}\r\n          type={\"text\"}\r\n          placeholder={\"Password\"}\r\n          component={\"input\"}\r\n          validate={[required]}\r\n        /> */}\r\n        <input\r\n          {...register(\"password\")}\r\n          type=\"password\"\r\n          name=\"password\"\r\n          id=\"password\"\r\n          placeholder={\"Password\"}\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        {/* <Field name={\"rememberMe\"} type=\"checkbox\" component={\"input\"} />{\" \"} */}\r\n        <input\r\n          {...register(\"rememberMe\")}\r\n          type=\"checkbox\"\r\n          name=\"rememberMe\"\r\n          id=\"rememberMe\"\r\n        />\r\n        remember me\r\n      </div>\r\n\r\n      <div>\r\n        <button type={\"submit\"}>Login</button>\r\n      </div>\r\n      {props.error && <div>{props.error}</div>}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst Login = (props) => {\r\n  const onSubmit = (value) => {\r\n    debugger;\r\n    props.login(value.email, value.password, value.rememberMe);\r\n  };\r\n  if (props.isAuth) {\r\n    return <Redirect to={\"/profile\"} />;\r\n  }\r\n  return (\r\n    <div>\r\n      <LoginForm onSubmit={onSubmit} />\r\n    </div>\r\n  );\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, { login, logout })(Login);\r\n","import React from 'react';\r\nimport { NewPostForm } from '../../common/NewPostForm/NewPostForm';\r\n\r\nconst Posts = (props) => {\r\n  return (\r\n    <div>\r\n      <NewPostForm />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Posts;","import React from 'react';\r\nimport Posts from './Posts';\r\n\r\nconst PostsContainer = (props) => {\r\n\r\n\r\n  return (\r\n    <>\r\n    <Posts/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PostsContainer;","import React from \"react\";\nimport \"./App.css\";\n\nimport Navbar from \"./components/Navbar/Navbar\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport { Route, withRouter } from \"react-router-dom\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport LoginPage from \"./components/Login/Login\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { initializeApp } from \"./redux/appReducer\";\nimport Preloader from \"./common/Preloader/Preloader\";\nimport PostsContainer from \"./components/News/Posts/PostsContainer\";\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.initializeApp();\n  }\n\n  render() {\n    if (!this.props.isInitialized) {\n      return <Preloader />;\n    }\n\n    return (\n      <div className=\"app-wrapper\">\n        <HeaderContainer />\n        <Navbar />\n        <div className=\"app-wrapper-content\">\n          <Route path=\"/dialogs\" render={() => <DialogsContainer />} />\n\n          <Route path=\"/profile/:userId?\" render={() => <ProfileContainer />} />\n\n          <Route path=\"/users\" render={() => <UsersContainer />} />\n\n          <Route path=\"/login\" render={() => <LoginPage />} />\n\n          <Route path='/news' render={() => <PostsContainer/>}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isInitialized: state.app.isInitialized,\n  };\n};\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, { initializeApp })\n)(App);\n","import * as serviceWorker from \"./serviceWorker\";\nimport store from \"./redux/redux-store\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\n// let renderEntireTree = (state) => {\n  ReactDOM.render(\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n  );\n// };\n\n// renderEntireTree(store.getState());\n\n// store.subscribe(() => {\n//   let state = store.getState();\n//   renderEntireTree(state);\n// });\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: c\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2CgMu\",\"dialogItem\":\"Dialogs_dialogItem__1-6Dg\",\"activeLink\":\"Dialogs_activeLink__1Fw7N\",\"dialogsItems\":\"Dialogs_dialogsItems__1b6BA\",\"active\":\"Dialogs_active__5BR1T\",\"messages\":\"Dialogs_messages__2WOiE\",\"message\":\"Dialogs_message__33SbR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1sgj5\",\"posts\":\"MyPosts_posts__5lgXK\",\"butt\":\"MyPosts_butt__3Ou_j\",\"newPostTextarea\":\"MyPosts_newPostTextarea__1ky0l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__1hVQW\",\"activePage\":\"Users_activePage__dLnGf\",\"pagesBox\":\"Users_pagesBox__UgmZe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewPostForm_form__dRj2G\",\"button\":\"NewPostForm_button__W-H1w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__31hHu\",\"name\":\"User_name__L_IQX\"};"],"sourceRoot":""}